version: '3'

services:
  wp:
    image: wordpress:latest # https://hub.docker.com/_/wordpress/
    ports:
      - 80 # change ip if required
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp-app:/var/www/html # Full wordpress project
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}"
    depends_on:
      - db
    links:
      - db

  wpcli:
    image: wordpress:cli
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp-app:/var/www/html
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}"
    depends_on:
      - db
      - wp

  pma:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      UPLOAD_LIMIT: 50M
    ports:
      - 8080:80
    depends_on:
      - db
    links:
      - db

  db:
    image: mysql:latest
    ports:
      - 3306 # change ip if required
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ./wp-data:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx-default.conf:/etc/nginx/conf.d/nginx-default.conf
      #- ./config/nginx-request-cert.conf:/etc/nginx/conf.d/nginx-default.conf # Use this config instead of default for the first creation of the SSL cert
      - ./wp-app:/var/www/html:rw
      - ./letsencrypt/conf:/etc/letsencrypt

  certbot:
    container_name: certboot
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  letsencrypt:
    restart: always
    image: vdhpieter/letsencrypt-webroot
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt/conf:/etc/letsencrypt
      - ./letsencrypt/html:/tmp/letsencrypt
      - ./wp-app:/var/www/html
    links:
      - nginx
    environment:
      - DOMAINS=${DOMAINS}
      - EMAIL={EMAIL}
      - WEBROOT_PATH=/var/www/html
      - EXP_LIMIT=30
      - CHECK_FREQ=30
      - CHICKENEGG=1
      - STAGING=0

volumes:
  db_data:
